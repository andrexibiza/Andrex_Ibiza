?strptime
install.packages(naniar)
install.packages("naniar")
install.packages("naniar")
# Load packages
library(palmerpenguins) # data source
library(tidyverse)
library(dplyr)
library(naniar)
install.packages('naniar')
library(naniar)
install.packages("naniar")
install.packages('Rtools')
install.packages('naniar')
install.packages("naniar")
install.packages(c("BH", "bslib", "cli", "cpp11", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "future", "future.apply", "ggplot2", "glue", "haven", "htmltools", "htmlwidgets", "jsonlite", "knitr", "later", "lifecycle", "lubridate", "markdown", "openssl", "plotly", "prettyunits", "processx", "progress", "ps", "ragg", "Rcpp", "RcppArmadillo", "readr", "recipes", "reprex", "rlang", "sass", "scales", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "withr", "xfun", "xml2", "xts", "yaml"))
install.packages(c("BH", "bslib", "cli", "cpp11", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "future", "future.apply", "ggplot2", "glue", "haven", "htmltools", "htmlwidgets", "jsonlite", "knitr", "later", "lifecycle", "lubridate", "markdown", "openssl", "plotly", "prettyunits", "processx", "progress", "ps", "ragg", "Rcpp", "RcppArmadillo", "readr", "recipes", "reprex", "rlang", "sass", "scales", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "withr", "xfun", "xml2", "xts", "yaml"))
install.packages(c("BH", "bslib", "cli", "cpp11", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "future", "future.apply", "ggplot2", "glue", "haven", "htmltools", "htmlwidgets", "jsonlite", "knitr", "later", "lifecycle", "lubridate", "markdown", "openssl", "plotly", "prettyunits", "processx", "progress", "ps", "ragg", "Rcpp", "RcppArmadillo", "readr", "recipes", "reprex", "rlang", "sass", "scales", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "withr", "xfun", "xml2", "xts", "yaml"))
install.packages(c("BH", "bslib", "cli", "cpp11", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "future", "future.apply", "ggplot2", "glue", "haven", "htmltools", "htmlwidgets", "jsonlite", "knitr", "later", "lifecycle", "lubridate", "markdown", "openssl", "plotly", "prettyunits", "processx", "progress", "ps", "ragg", "Rcpp", "RcppArmadillo", "readr", "recipes", "reprex", "rlang", "sass", "scales", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "withr", "xfun", "xml2", "xts", "yaml"))
detach("package:stats", unload = TRUE)
detach("package:utils", unload = TRUE)
library(utils, lib.loc = "C:/Program Files/R/R-4.3.1/library")
detach("package:methods", unload = TRUE)
detach("package:graphics", unload = TRUE)
detach("package:grDevices", unload = TRUE)
detach("package:datasets", unload = TRUE)
install.packages("naniar")
setwd("//wdmycloudex4100/Axel-Ibiza/Andrex_Ibiza")
# Load packages
library(tidyverse)
library(ggplot2)
# Load penguins_clean.rds from Week 2 checkpoint
penguins_clean <- readRDS(file = "penguins_clean.rds")
head(penguins_clean)
posn_j <- position_jitter(0.1,
seed = 666)
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j)
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j) +
scale_x_continuous("Culmen Length") +
scale_color_discrete("Species")
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j) +
scale_x_continuous("Culmen Length (mm)") +
scale_y_continuous("Culmen Depth (mm)")
scale_color_discrete("Species")
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j, alpha = 0.8) +
scale_x_continuous("Culmen Length (mm)") +
scale_y_continuous("Culmen Depth (mm)")
scale_color_discrete("Species")
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j, alpha = 0.8, size = 5) +
scale_x_continuous("Culmen Length (mm)") +
scale_y_continuous("Culmen Depth (mm)")
scale_color_discrete("Species")
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j, alpha = 0.5, size = 5) +
scale_x_continuous("Culmen Length (mm)") +
scale_y_continuous("Culmen Depth (mm)")
scale_color_discrete("Species")
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j, alpha = 0.5, size = 5) +
scale_x_continuous("Culmen Length (mm)") +
scale_y_continuous("Culmen Depth (mm)") +
scale_color_discrete("Species") +
theme_classic()
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species,
fill="black")) +
geom_point(position = posn_j, alpha = 0.5, size = 5) +
scale_x_continuous("Culmen Length (mm)") +
scale_y_continuous("Culmen Depth (mm)") +
scale_color_discrete("Species") +
theme_classic()
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j, alpha = 0.5, size = 5) +
scale_x_continuous("Culmen Length (mm)") +
scale_y_continuous("Culmen Depth (mm)") +
scale_color_discrete("Species") +
theme_classic()
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j, alpha = 0.7, size = 5) +
scale_x_continuous("Culmen Length (mm)") +
scale_y_continuous("Culmen Depth (mm)") +
scale_color_discrete("Species") +
theme_classic()
ggplot(penguins_clean,
aes(x=species,
y=body_mass_g,
fill=species)) +
geom_boxplot() +
labs(title = "Body Mass by Species",
x = "Species",
y = "Body Mass (g)") +
theme_classic()
penguins_clean$species <- factor(penguins_clean$species,
labels = c("Adelie",
"Chinstrap",
"Gentoo"))
ggplot(penguins_clean,
aes(x=species,
y=body_mass_g,
fill=species)) +
geom_boxplot() +
labs(title = "Body Mass by Species",
x = "Species",
y = "Body Mass (g)") +
theme_classic()
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j, alpha = 0.7, size = 5) +
labs(title="Culmen Length (mm) vs. Culmen Length (mm) by species",
x = "Culmen Length (mm)",
y = "Culmen Depth (mm)")
scale_color_discrete("Species") +
theme_classic()
rlang::last_trace()
ggplot(penguins_clean,
aes(x = culmen_length_mm,
y = culmen_depth_mm,
color = species)) +
geom_point(position = posn_j, alpha = 0.7, size = 5) +
labs(title="Culmen Length (mm) vs. Culmen Length (mm) by species",
x = "Culmen Length (mm)",
y = "Culmen Depth (mm)") +
scale_color_discrete("Species") +
theme_classic()
ggplot(penguins_clean,
aes(x=species,
y=body_mass_g,
fill=species)) +
geom_boxplot() +
labs(title = "Body Mass by Species",
x = "Species",
y = "Body Mass (g)") +
theme_classic()
ggplot(penguins_clean, aes(x=body_mass_g, fill=species)) +
geom_density(alpha = 0.5) +
labs(title = "Stacked Density Plots of Body Mass by Species", x = "Body Mass (g)", y = "Density") +
theme_minimal() +
scale_y_continuous(labels = scales::comma)
ggplot(penguins_clean, aes(x=body_mass_g, fill=species)) +
geom_density(alpha = 0.5) +
labs(title = "Stacked Density Plots of Body Mass by Species", x = "Body Mass (g)", y = "Density") +
theme_classic() +
scale_y_continuous(labels = scales::comma)
ggplot(penguins_clean, aes(x=culmen_length_mm, fill=species)) +
geom_density(alpha = 0.5) +
labs(title = "Stacked Density Plots of Culmen Length (mm) by Species", x = "Culmen Length (mm)", y = "Density") +
theme_classic() +
scale_y_continuous(labels = scales::comma)
ggplot(penguins_clean, aes(x=culmen_depth_mm, fill=species)) +
geom_density(alpha = 0.5) +
labs(title = "Stacked Density Plots of Culmen Depth (mm) by Species", x = "Culmen Depth (mm)", y = "Density") +
theme_classic() +
scale_y_continuous(labels = scales::comma)
ggplot(penguins_clean, aes(x = region, fill = species)) +
geom_bar(position = "stack") +
labs(title = "Segmented Bar Plot of Species by Region", x = "Region", y = "Count") +
theme_classic()
ggplot(penguins_clean, aes(x = "", fill = species)) +
geom_bar(width = 1) +
coord_polar("y", start = 0) +
labs(title = "Species Distribution", fill = "Species") +
theme_classic()
ggplot(penguins_clean, aes(x = region, fill = species)) +
geom_bar(position = "stack") +
labs(title = "Segmented Bar Plot of Species by Region", x = "Region", y = "Count") +
theme_classic()
